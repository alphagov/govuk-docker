#! /bin/bash

COMMAND=$1
shift

GOVUK_DOCKER_DIR=${GOVUK_ROOT_DIR:-$HOME/govuk}/govuk-docker

COMPOSE_FILES="$(dirname $0)/../services/*/docker-compose.yml"
COMPOSE_FLAGS="-f $(dirname $0)/../docker-compose.yml"

for file in $COMPOSE_FILES; do
  COMPOSE_FLAGS="$COMPOSE_FLAGS -f $file"
done

function check_service {
  SERVICE=${GOVUK_DOCKER_SERVICE-"$(basename $PWD)"}
  SERVICES=$(ls $COMPOSE_FILES | xargs -L 1 dirname | xargs -L 1 basename)

  if ! (echo $SERVICES | grep -w $SERVICE > /dev/null); then
    echo "ERROR: The name of this directory doesn't match a known service"
    echo
    echo "$SERVICES"
    exit 1
  fi
}

function check_stack {
  if [[ -z "$STACK" ]]; then
    echo "ERROR: Please specify one of the stacks defined for \"$SERVICE\""
    echo
    docker-compose $COMPOSE_FLAGS ps --services | grep $SERVICE
    exit 1
  fi
}

case $COMMAND in
  "setup")
    for GOVUK_DOCKER_SERVICE in "$@"; do
      check_service
    done
    set -x
    cd $GOVUK_DOCKER_DIR
    for GOVUK_DOCKER_SERVICE in "$@"; do
      make $GOVUK_DOCKER_SERVICE
    done;;
  "setup-this")
    check_service
    set -x
    cd $GOVUK_DOCKER_DIR
    make $SERVICE;;
  "run-this")
    STACK=$1
    shift
    check_service
    check_stack
    case $# in
      0)
        ([ $# -eq 0 ] && echo env)
        set -x
        docker-compose $COMPOSE_FLAGS run --rm --service-ports $SERVICE-$STACK
        ;;
      *)
        set -x
        docker-compose $COMPOSE_FLAGS run --rm --service-ports $SERVICE-$STACK env "$@"
        ;;
    esac
    ;;
  "prune")
    docker container prune -f
    docker volume rm $(docker volume ls -q -f 'dangling=true' | grep -x '.\{64,\}') 2> /dev/null
    docker image prune -f
    ;;
  *)
    set -x
    docker-compose $COMPOSE_FLAGS $COMMAND "$@"
esac
